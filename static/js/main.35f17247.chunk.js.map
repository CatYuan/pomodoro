{"version":3,"sources":["Beep_Short.mp3","images/tomato.png","helpers.js","App.js","index.js"],"names":["module","exports","uuid4","dt","Date","getTime","replace","c","r","Math","random","floor","toString","formatLeadingZero","num","renderTimeRemaining","totalTime","startTime","elapsedMS","now","getElapsedMS","totalTimeArray","split","remainingMS","parseInt","remainingSec","remainingMin","remainingHr","App","state","activities","handleAddActivity","activity","newActivity","title","id","newActivities","concat","setState","className","this","React","Component","NavBar","activityList","props","filter","map","key","TimerDashboard","Header","src","require","alt","TimerHolder","canEdit","timesUp","handleResetClick","handleRestClick","handleStartClick","handleTimesUp","forceUpdateInterval","setInterval","forceUpdate","clearInterval","Audio","beep","play","length","time","helpers","EditableTimer","project","handleProjectChange","e","target","value","handleTimeChange","type","placeholder","onChange","defaultValue","onClick","Timer","TimesUpButton","buttonPrompt","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.35f17247.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Beep_Short.f19846ae.mp3\";","module.exports = __webpack_public_path__ + \"static/media/tomato.ca7687e5.png\";","export function uuid4(){\r\n  var dt = new Date().getTime();\r\n  var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n      var r = (dt + Math.random()*16)%16 | 0;\r\n      dt = Math.floor(dt/16);\r\n      return (c==='x' ? r :(r&0x3|0x8)).toString(16);\r\n  });\r\n  return uuid;\r\n}\r\n\r\nfunction formatLeadingZero(num) {\r\n  return num < 10 ? '0'+num : num;\r\n}\r\n\r\n/**\r\n * Returns the elapsed time in milliseconds\r\n * @param {int} startTime  - milliseconds from January 1, 1970, 00:00:00 UTC\r\n */\r\nfunction getElapsedMS(startTime) {\r\n  const curTime = Date.now();\r\n  return curTime - startTime;\r\n}\r\n\r\nexport function renderTimeRemaining(totalTime, startTime) {\r\n  var elapsedMS = getElapsedMS(startTime);\r\n\r\n  //converting totalTime to milliseconds\r\n  var totalTimeArray = totalTime.split(':');\r\n  const totalMin = parseInt(totalTimeArray[1]) + parseInt(totalTimeArray[0]) * 60;\r\n  const totalMS = totalMin * 60000;\r\n\r\n  var remainingMS = totalMS - elapsedMS;\r\n\r\n  //formatting it for display\r\n  var remainingSec = Math.floor(remainingMS / 1000);\r\n  var remainingMin = Math.floor(remainingSec / 60);\r\n  remainingSec = remainingSec - remainingMin * 60;\r\n  var remainingHr = Math.floor(remainingMin / 60);\r\n  remainingMin = remainingMin - remainingHr*60;\r\n\r\n  return formatLeadingZero(remainingHr) + ':' + formatLeadingZero(remainingMin) + ':' + formatLeadingZero(remainingSec);\r\n}","import React from 'react';\nimport './App.css';\nimport * as helpers from './helpers';\nimport beep from './Beep_Short.mp3';\n\nclass App extends React.Component {\n  state = {\n    activities: [],\n  };\n\n  handleAddActivity = (activity) => {\n    const newActivity = {\n      title: activity.title,\n      totalTime: activity.totalTime,\n      startTime: activity.startTime,\n      id: activity.id,\n    };\n    const newActivities = this.state.activities.concat(newActivity);\n    this.setState({\n      activities: newActivities,\n    });\n  };\n\n  render() {\n    return (\n      <div className='App'>\n        <TimerDashboard\n          activities={this.state.activities}\n          handleAddActivity={(activity)=>this.handleAddActivity(activity)}\n        />\n        <NavBar\n          activities={this.state.activities}\n        />\n      </div>\n    );\n  }\n}\n\n/**\n * @param activities - list of all activities\n */\nclass NavBar extends React.Component {\n  render() {\n    const activities = this.props.activities.filter(activity => activity.title !== \"Rest\");\n    const activityList = activities.map((activity) => (\n      <li key={activity.id}>\n        {activity.title} - {activity.totalTime} min\n      </li>\n    ));\n\n    return(\n      <div className='NavBar'>\n        <h2>Today's Pomodoros</h2>\n        <ol>\n          {activityList}\n        </ol>\n      </div>\n    );\n  }\n}\n\n/**\n * @param activities - list of all activities\n * @param handleRestClick\n * @param handleStartClick\n */\nclass TimerDashboard extends React.Component {\n  render() {\n    return(\n      <div className='TimerDashboard'>\n        <Header />\n        <TimerHolder \n          activities={this.props.activities}\n          handleAddActivity={(activity) => this.props.handleAddActivity(activity)}\n        />\n      </div>\n    );\n  }\n}\n\nclass Header extends React.Component {\n  render() {\n    return(\n      <div className='Header'>\n        <img \n          src={require('./images/tomato.png')} \n          alt='tomato timer'\n        />\n        <h1>Pomodoro</h1>\n      </div>\n    );\n  }\n}\n\n/**\n * @param bool canEdit - if true 'EditableTimer' is rendered \n *        otherwise Timer is rendered\n * @ param activities - list of all activities\n * @param handleRestClick\n * @param handleStartClick\n */\nclass TimerHolder extends React.Component {\n  state = {\n    canEdit: true,\n    timesUp: false,\n  }\n\n  componentDidMount() {\n    this.forceUpdateInterval = setInterval(() => this.forceUpdate(), 50);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.forceUpdateInterval);\n  }\n\n  handleResetClick = () => {\n    this.setState({\n      canEdit: true,\n      timesUp: false,\n    });\n  };\n\n  handleRestClick = (activity) => {\n    this.setState({timesUp: false});\n    this.props.handleAddActivity(activity);\n  }\n\n  handleStartClick = (activity) => {\n    this.props.handleAddActivity(activity);\n    this.setState({canEdit: false});\n  };\n\n  handleTimesUp = () => {\n    this.setState({timesUp: true});\n  };\n\n  render() {\n    if (this.state.timesUp) {\n      const beepAudio = new Audio(beep);\n      beepAudio.play();\n    }\n\n    if (this.state.canEdit) {\n      return(\n        <EditableTimer\n          handleStartClick={(activity) => this.handleStartClick(activity)}\n        />\n      );\n    } else {\n      const activities = this.props.activities;\n      const title = activities[activities.length - 1].title;\n      const startTime = activities[activities.length - 1].startTime;\n      const totalTime = activities[activities.length - 1].totalTime;\n      const time = helpers.renderTimeRemaining(totalTime, startTime);\n      if (time === \"00:00:00\" && this.state.timesUp === false) {\n        this.handleTimesUp();\n      }\n      return (\n        <Timer\n          title={title}\n          time={time}\n          timesUp={this.state.timesUp}\n          handleResetClick={() => this.handleResetClick()}\n          handleRestClick={(activity) => this.handleRestClick(activity)}\n        />\n      );\n    }\n  }\n}\n\n/**\n * @param handleStartClick\n */\nclass EditableTimer extends React.Component {\n  state = {\n    project: '',\n    totalTime: '00:25',\n  }\n\n  handleProjectChange = (e) => {\n    this.setState({project: e.target.value});\n  };\n\n  handleTimeChange = (e) => {\n    this.setState({totalTime: e.target.value});\n  };\n\n  handleStartClick = () => {\n    if (this.state.project !== '') {\n      const activity = {\n        title: this.state.project,\n        totalTime: this.state.totalTime,\n        startTime: Date.now(),\n        id: helpers.uuid4(),\n      };\n      this.props.handleStartClick(activity);\n    }\n  };\n\n  render() {\n    const prompt=\"What do you want to work on?\"\n    return(\n      <div className='EditableTimer'>\n        <div className='label-input'>\n          <label>Project</label>\n          <input \n            type='text' \n            placeholder={prompt} \n            id='project-input'\n            onChange={(e) => this.handleProjectChange(e)}  \n          />\n        </div>\n        <div className='label-input'>\n          <label>Time (hr:min)</label>\n          <input \n            type='time' \n            defaultValue='00:25' \n            id='time-input'\n            onChange={(e) => this.handleTimeChange(e)}\n          />\n        </div>\n        <button \n          id='Start'\n          onClick={() => this.handleStartClick()}\n        >\n          Start\n        </button>\n      </div>\n    );\n  }\n}\n\n/**\n * @param string title - the task to do\n * @param int time - the number of seconds on the timer\n * @param handleResetClick\n * @param handleRestClick\n * @param timesUp\n */\nclass Timer extends React.Component {\n  render() {\n    if (this.props.timesUp) {\n      return(\n        <TimesUpButton\n          title={this.props.title}\n          handleResetClick={() => this.props.handleResetClick()}\n          handleRestClick={(activity) => this.props.handleRestClick(activity)}\n        />\n      );\n    } else {\n      return(\n        <div className='Timer'>\n          <p>{this.props.title}</p>\n          <h3 className='Countdown'>{this.props.time}</h3>\n        </div>\n      );\n    }\n  }\n}\n\n/**\n * @param string title - the task to do\n * @param handleResetClick\n * @param handleRestClick\n */\nclass TimesUpButton extends React.Component {\n  handleRestClick = () => {\n    const activity = {\n      title: \"Rest\",\n      totalTime: \"00:05\",\n      startTime: Date.now(),\n      id: helpers.uuid4(),\n    };\n    this.props.handleRestClick(activity);\n  }\n\n  render() {\n    var buttonPrompt = \"Rest\";\n    if (this.props.title === \"Rest\") {\n      buttonPrompt = \"Reset\"\n    }\n\n    return (\n      <div className='Timer'>\n        <p>{this.props.title}</p>\n        <h3 className='Countdown'>00:00:00</h3>\n        <button \n          type='button' \n          id={buttonPrompt}\n          onClick={() => {\n            if (buttonPrompt === \"Reset\") {\n              return this.props.handleResetClick();\n            } else {\n              return this.handleRestClick();\n            }\n          }}\n        >\n          {buttonPrompt}\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}